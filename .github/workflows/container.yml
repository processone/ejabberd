name: Container

on:
  workflow_run:
    workflows: [Installers]
    types:
      - completed
    branches: [master]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  container:
    name: Container
    runs-on: ubuntu-22.04
    permissions:
      packages: write
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: tarballs
          pattern: ejabberd-tarballs
          merge-multiple: true

      - name: Checkout ejabberd-contrib
        uses: actions/checkout@v4
        with:
          repository: processone/ejabberd-contrib
          path: .ejabberd-modules/sources/ejabberd-contrib

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get git describe
        id: gitdescribe
        run: echo "ver=$(git describe --tags)" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.revision=${{ steps.gitdescribe.outputs.ver }}
            org.opencontainers.image.licenses=GPL-2.0
            org.opencontainers.image.vendor=ProcessOne

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          build-args: |
            METHOD=package
            VERSION=${{ steps.gitdescribe.outputs.ver }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          context: .
          file: .github/container/Dockerfile
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
